/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.temantani.kafka.user.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class UserAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7269697373776607731L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserAvroModel\",\"namespace\":\"com.temantani.kafka.user.avro.model\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"userId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"phoneNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"email\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"profilePictureUrl\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedRole\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"roles\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"bank\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"bankAccountNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"bankAccountHolderName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"street\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"city\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"postalCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<UserAvroModel> ENCODER =
      new BinaryMessageEncoder<UserAvroModel>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<UserAvroModel> DECODER =
      new BinaryMessageDecoder<UserAvroModel>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<UserAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<UserAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<UserAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<UserAvroModel>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this UserAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a UserAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a UserAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static UserAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String type;
  private java.lang.String userId;
  private java.lang.String name;
  private java.lang.String phoneNumber;
  private java.lang.String email;
  private java.lang.String profilePictureUrl;
  private java.lang.String activatedRole;
  private java.lang.String roles;
  private java.lang.String bank;
  private java.lang.String bankAccountNumber;
  private java.lang.String bankAccountHolderName;
  private java.lang.String street;
  private java.lang.String city;
  private java.lang.String postalCode;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UserAvroModel() {}

  /**
   * All-args constructor.
   * @param type The new value for type
   * @param userId The new value for userId
   * @param name The new value for name
   * @param phoneNumber The new value for phoneNumber
   * @param email The new value for email
   * @param profilePictureUrl The new value for profilePictureUrl
   * @param activatedRole The new value for activatedRole
   * @param roles The new value for roles
   * @param bank The new value for bank
   * @param bankAccountNumber The new value for bankAccountNumber
   * @param bankAccountHolderName The new value for bankAccountHolderName
   * @param street The new value for street
   * @param city The new value for city
   * @param postalCode The new value for postalCode
   */
  public UserAvroModel(java.lang.String type, java.lang.String userId, java.lang.String name, java.lang.String phoneNumber, java.lang.String email, java.lang.String profilePictureUrl, java.lang.String activatedRole, java.lang.String roles, java.lang.String bank, java.lang.String bankAccountNumber, java.lang.String bankAccountHolderName, java.lang.String street, java.lang.String city, java.lang.String postalCode) {
    this.type = type;
    this.userId = userId;
    this.name = name;
    this.phoneNumber = phoneNumber;
    this.email = email;
    this.profilePictureUrl = profilePictureUrl;
    this.activatedRole = activatedRole;
    this.roles = roles;
    this.bank = bank;
    this.bankAccountNumber = bankAccountNumber;
    this.bankAccountHolderName = bankAccountHolderName;
    this.street = street;
    this.city = city;
    this.postalCode = postalCode;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return userId;
    case 2: return name;
    case 3: return phoneNumber;
    case 4: return email;
    case 5: return profilePictureUrl;
    case 6: return activatedRole;
    case 7: return roles;
    case 8: return bank;
    case 9: return bankAccountNumber;
    case 10: return bankAccountHolderName;
    case 11: return street;
    case 12: return city;
    case 13: return postalCode;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: type = value$ != null ? value$.toString() : null; break;
    case 1: userId = value$ != null ? value$.toString() : null; break;
    case 2: name = value$ != null ? value$.toString() : null; break;
    case 3: phoneNumber = value$ != null ? value$.toString() : null; break;
    case 4: email = value$ != null ? value$.toString() : null; break;
    case 5: profilePictureUrl = value$ != null ? value$.toString() : null; break;
    case 6: activatedRole = value$ != null ? value$.toString() : null; break;
    case 7: roles = value$ != null ? value$.toString() : null; break;
    case 8: bank = value$ != null ? value$.toString() : null; break;
    case 9: bankAccountNumber = value$ != null ? value$.toString() : null; break;
    case 10: bankAccountHolderName = value$ != null ? value$.toString() : null; break;
    case 11: street = value$ != null ? value$.toString() : null; break;
    case 12: city = value$ != null ? value$.toString() : null; break;
    case 13: postalCode = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.String getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'userId' field.
   * @return The value of the 'userId' field.
   */
  public java.lang.String getUserId() {
    return userId;
  }


  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.String value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'phoneNumber' field.
   * @return The value of the 'phoneNumber' field.
   */
  public java.lang.String getPhoneNumber() {
    return phoneNumber;
  }


  /**
   * Sets the value of the 'phoneNumber' field.
   * @param value the value to set.
   */
  public void setPhoneNumber(java.lang.String value) {
    this.phoneNumber = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public java.lang.String getEmail() {
    return email;
  }


  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.String value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'profilePictureUrl' field.
   * @return The value of the 'profilePictureUrl' field.
   */
  public java.lang.String getProfilePictureUrl() {
    return profilePictureUrl;
  }


  /**
   * Sets the value of the 'profilePictureUrl' field.
   * @param value the value to set.
   */
  public void setProfilePictureUrl(java.lang.String value) {
    this.profilePictureUrl = value;
  }

  /**
   * Gets the value of the 'activatedRole' field.
   * @return The value of the 'activatedRole' field.
   */
  public java.lang.String getActivatedRole() {
    return activatedRole;
  }


  /**
   * Sets the value of the 'activatedRole' field.
   * @param value the value to set.
   */
  public void setActivatedRole(java.lang.String value) {
    this.activatedRole = value;
  }

  /**
   * Gets the value of the 'roles' field.
   * @return The value of the 'roles' field.
   */
  public java.lang.String getRoles() {
    return roles;
  }


  /**
   * Sets the value of the 'roles' field.
   * @param value the value to set.
   */
  public void setRoles(java.lang.String value) {
    this.roles = value;
  }

  /**
   * Gets the value of the 'bank' field.
   * @return The value of the 'bank' field.
   */
  public java.lang.String getBank() {
    return bank;
  }


  /**
   * Sets the value of the 'bank' field.
   * @param value the value to set.
   */
  public void setBank(java.lang.String value) {
    this.bank = value;
  }

  /**
   * Gets the value of the 'bankAccountNumber' field.
   * @return The value of the 'bankAccountNumber' field.
   */
  public java.lang.String getBankAccountNumber() {
    return bankAccountNumber;
  }


  /**
   * Sets the value of the 'bankAccountNumber' field.
   * @param value the value to set.
   */
  public void setBankAccountNumber(java.lang.String value) {
    this.bankAccountNumber = value;
  }

  /**
   * Gets the value of the 'bankAccountHolderName' field.
   * @return The value of the 'bankAccountHolderName' field.
   */
  public java.lang.String getBankAccountHolderName() {
    return bankAccountHolderName;
  }


  /**
   * Sets the value of the 'bankAccountHolderName' field.
   * @param value the value to set.
   */
  public void setBankAccountHolderName(java.lang.String value) {
    this.bankAccountHolderName = value;
  }

  /**
   * Gets the value of the 'street' field.
   * @return The value of the 'street' field.
   */
  public java.lang.String getStreet() {
    return street;
  }


  /**
   * Sets the value of the 'street' field.
   * @param value the value to set.
   */
  public void setStreet(java.lang.String value) {
    this.street = value;
  }

  /**
   * Gets the value of the 'city' field.
   * @return The value of the 'city' field.
   */
  public java.lang.String getCity() {
    return city;
  }


  /**
   * Sets the value of the 'city' field.
   * @param value the value to set.
   */
  public void setCity(java.lang.String value) {
    this.city = value;
  }

  /**
   * Gets the value of the 'postalCode' field.
   * @return The value of the 'postalCode' field.
   */
  public java.lang.String getPostalCode() {
    return postalCode;
  }


  /**
   * Sets the value of the 'postalCode' field.
   * @param value the value to set.
   */
  public void setPostalCode(java.lang.String value) {
    this.postalCode = value;
  }

  /**
   * Creates a new UserAvroModel RecordBuilder.
   * @return A new UserAvroModel RecordBuilder
   */
  public static com.temantani.kafka.user.avro.model.UserAvroModel.Builder newBuilder() {
    return new com.temantani.kafka.user.avro.model.UserAvroModel.Builder();
  }

  /**
   * Creates a new UserAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UserAvroModel RecordBuilder
   */
  public static com.temantani.kafka.user.avro.model.UserAvroModel.Builder newBuilder(com.temantani.kafka.user.avro.model.UserAvroModel.Builder other) {
    if (other == null) {
      return new com.temantani.kafka.user.avro.model.UserAvroModel.Builder();
    } else {
      return new com.temantani.kafka.user.avro.model.UserAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new UserAvroModel RecordBuilder by copying an existing UserAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new UserAvroModel RecordBuilder
   */
  public static com.temantani.kafka.user.avro.model.UserAvroModel.Builder newBuilder(com.temantani.kafka.user.avro.model.UserAvroModel other) {
    if (other == null) {
      return new com.temantani.kafka.user.avro.model.UserAvroModel.Builder();
    } else {
      return new com.temantani.kafka.user.avro.model.UserAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for UserAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserAvroModel>
    implements org.apache.avro.data.RecordBuilder<UserAvroModel> {

    private java.lang.String type;
    private java.lang.String userId;
    private java.lang.String name;
    private java.lang.String phoneNumber;
    private java.lang.String email;
    private java.lang.String profilePictureUrl;
    private java.lang.String activatedRole;
    private java.lang.String roles;
    private java.lang.String bank;
    private java.lang.String bankAccountNumber;
    private java.lang.String bankAccountHolderName;
    private java.lang.String street;
    private java.lang.String city;
    private java.lang.String postalCode;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.temantani.kafka.user.avro.model.UserAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.userId)) {
        this.userId = data().deepCopy(fields()[1].schema(), other.userId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.phoneNumber)) {
        this.phoneNumber = data().deepCopy(fields()[3].schema(), other.phoneNumber);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.email)) {
        this.email = data().deepCopy(fields()[4].schema(), other.email);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.profilePictureUrl)) {
        this.profilePictureUrl = data().deepCopy(fields()[5].schema(), other.profilePictureUrl);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.activatedRole)) {
        this.activatedRole = data().deepCopy(fields()[6].schema(), other.activatedRole);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.roles)) {
        this.roles = data().deepCopy(fields()[7].schema(), other.roles);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.bank)) {
        this.bank = data().deepCopy(fields()[8].schema(), other.bank);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.bankAccountNumber)) {
        this.bankAccountNumber = data().deepCopy(fields()[9].schema(), other.bankAccountNumber);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.bankAccountHolderName)) {
        this.bankAccountHolderName = data().deepCopy(fields()[10].schema(), other.bankAccountHolderName);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.street)) {
        this.street = data().deepCopy(fields()[11].schema(), other.street);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.city)) {
        this.city = data().deepCopy(fields()[12].schema(), other.city);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.postalCode)) {
        this.postalCode = data().deepCopy(fields()[13].schema(), other.postalCode);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
    }

    /**
     * Creates a Builder by copying an existing UserAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.temantani.kafka.user.avro.model.UserAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userId)) {
        this.userId = data().deepCopy(fields()[1].schema(), other.userId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.phoneNumber)) {
        this.phoneNumber = data().deepCopy(fields()[3].schema(), other.phoneNumber);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.email)) {
        this.email = data().deepCopy(fields()[4].schema(), other.email);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.profilePictureUrl)) {
        this.profilePictureUrl = data().deepCopy(fields()[5].schema(), other.profilePictureUrl);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.activatedRole)) {
        this.activatedRole = data().deepCopy(fields()[6].schema(), other.activatedRole);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.roles)) {
        this.roles = data().deepCopy(fields()[7].schema(), other.roles);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.bank)) {
        this.bank = data().deepCopy(fields()[8].schema(), other.bank);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.bankAccountNumber)) {
        this.bankAccountNumber = data().deepCopy(fields()[9].schema(), other.bankAccountNumber);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.bankAccountHolderName)) {
        this.bankAccountHolderName = data().deepCopy(fields()[10].schema(), other.bankAccountHolderName);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.street)) {
        this.street = data().deepCopy(fields()[11].schema(), other.street);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.city)) {
        this.city = data().deepCopy(fields()[12].schema(), other.city);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.postalCode)) {
        this.postalCode = data().deepCopy(fields()[13].schema(), other.postalCode);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.String getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder setType(java.lang.String value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'userId' field.
      * @return The value.
      */
    public java.lang.String getUserId() {
      return userId;
    }


    /**
      * Sets the value of the 'userId' field.
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder setUserId(java.lang.String value) {
      validate(fields()[1], value);
      this.userId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder setName(java.lang.String value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'phoneNumber' field.
      * @return The value.
      */
    public java.lang.String getPhoneNumber() {
      return phoneNumber;
    }


    /**
      * Sets the value of the 'phoneNumber' field.
      * @param value The value of 'phoneNumber'.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder setPhoneNumber(java.lang.String value) {
      validate(fields()[3], value);
      this.phoneNumber = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'phoneNumber' field has been set.
      * @return True if the 'phoneNumber' field has been set, false otherwise.
      */
    public boolean hasPhoneNumber() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'phoneNumber' field.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder clearPhoneNumber() {
      phoneNumber = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.String getEmail() {
      return email;
    }


    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder setEmail(java.lang.String value) {
      validate(fields()[4], value);
      this.email = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder clearEmail() {
      email = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'profilePictureUrl' field.
      * @return The value.
      */
    public java.lang.String getProfilePictureUrl() {
      return profilePictureUrl;
    }


    /**
      * Sets the value of the 'profilePictureUrl' field.
      * @param value The value of 'profilePictureUrl'.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder setProfilePictureUrl(java.lang.String value) {
      validate(fields()[5], value);
      this.profilePictureUrl = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'profilePictureUrl' field has been set.
      * @return True if the 'profilePictureUrl' field has been set, false otherwise.
      */
    public boolean hasProfilePictureUrl() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'profilePictureUrl' field.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder clearProfilePictureUrl() {
      profilePictureUrl = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'activatedRole' field.
      * @return The value.
      */
    public java.lang.String getActivatedRole() {
      return activatedRole;
    }


    /**
      * Sets the value of the 'activatedRole' field.
      * @param value The value of 'activatedRole'.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder setActivatedRole(java.lang.String value) {
      validate(fields()[6], value);
      this.activatedRole = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'activatedRole' field has been set.
      * @return True if the 'activatedRole' field has been set, false otherwise.
      */
    public boolean hasActivatedRole() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'activatedRole' field.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder clearActivatedRole() {
      activatedRole = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'roles' field.
      * @return The value.
      */
    public java.lang.String getRoles() {
      return roles;
    }


    /**
      * Sets the value of the 'roles' field.
      * @param value The value of 'roles'.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder setRoles(java.lang.String value) {
      validate(fields()[7], value);
      this.roles = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'roles' field has been set.
      * @return True if the 'roles' field has been set, false otherwise.
      */
    public boolean hasRoles() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'roles' field.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder clearRoles() {
      roles = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'bank' field.
      * @return The value.
      */
    public java.lang.String getBank() {
      return bank;
    }


    /**
      * Sets the value of the 'bank' field.
      * @param value The value of 'bank'.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder setBank(java.lang.String value) {
      validate(fields()[8], value);
      this.bank = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'bank' field has been set.
      * @return True if the 'bank' field has been set, false otherwise.
      */
    public boolean hasBank() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'bank' field.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder clearBank() {
      bank = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'bankAccountNumber' field.
      * @return The value.
      */
    public java.lang.String getBankAccountNumber() {
      return bankAccountNumber;
    }


    /**
      * Sets the value of the 'bankAccountNumber' field.
      * @param value The value of 'bankAccountNumber'.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder setBankAccountNumber(java.lang.String value) {
      validate(fields()[9], value);
      this.bankAccountNumber = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'bankAccountNumber' field has been set.
      * @return True if the 'bankAccountNumber' field has been set, false otherwise.
      */
    public boolean hasBankAccountNumber() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'bankAccountNumber' field.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder clearBankAccountNumber() {
      bankAccountNumber = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'bankAccountHolderName' field.
      * @return The value.
      */
    public java.lang.String getBankAccountHolderName() {
      return bankAccountHolderName;
    }


    /**
      * Sets the value of the 'bankAccountHolderName' field.
      * @param value The value of 'bankAccountHolderName'.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder setBankAccountHolderName(java.lang.String value) {
      validate(fields()[10], value);
      this.bankAccountHolderName = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'bankAccountHolderName' field has been set.
      * @return True if the 'bankAccountHolderName' field has been set, false otherwise.
      */
    public boolean hasBankAccountHolderName() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'bankAccountHolderName' field.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder clearBankAccountHolderName() {
      bankAccountHolderName = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'street' field.
      * @return The value.
      */
    public java.lang.String getStreet() {
      return street;
    }


    /**
      * Sets the value of the 'street' field.
      * @param value The value of 'street'.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder setStreet(java.lang.String value) {
      validate(fields()[11], value);
      this.street = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'street' field has been set.
      * @return True if the 'street' field has been set, false otherwise.
      */
    public boolean hasStreet() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'street' field.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder clearStreet() {
      street = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'city' field.
      * @return The value.
      */
    public java.lang.String getCity() {
      return city;
    }


    /**
      * Sets the value of the 'city' field.
      * @param value The value of 'city'.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder setCity(java.lang.String value) {
      validate(fields()[12], value);
      this.city = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'city' field has been set.
      * @return True if the 'city' field has been set, false otherwise.
      */
    public boolean hasCity() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'city' field.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder clearCity() {
      city = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'postalCode' field.
      * @return The value.
      */
    public java.lang.String getPostalCode() {
      return postalCode;
    }


    /**
      * Sets the value of the 'postalCode' field.
      * @param value The value of 'postalCode'.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder setPostalCode(java.lang.String value) {
      validate(fields()[13], value);
      this.postalCode = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'postalCode' field has been set.
      * @return True if the 'postalCode' field has been set, false otherwise.
      */
    public boolean hasPostalCode() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'postalCode' field.
      * @return This builder.
      */
    public com.temantani.kafka.user.avro.model.UserAvroModel.Builder clearPostalCode() {
      postalCode = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public UserAvroModel build() {
      try {
        UserAvroModel record = new UserAvroModel();
        record.type = fieldSetFlags()[0] ? this.type : (java.lang.String) defaultValue(fields()[0]);
        record.userId = fieldSetFlags()[1] ? this.userId : (java.lang.String) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.String) defaultValue(fields()[2]);
        record.phoneNumber = fieldSetFlags()[3] ? this.phoneNumber : (java.lang.String) defaultValue(fields()[3]);
        record.email = fieldSetFlags()[4] ? this.email : (java.lang.String) defaultValue(fields()[4]);
        record.profilePictureUrl = fieldSetFlags()[5] ? this.profilePictureUrl : (java.lang.String) defaultValue(fields()[5]);
        record.activatedRole = fieldSetFlags()[6] ? this.activatedRole : (java.lang.String) defaultValue(fields()[6]);
        record.roles = fieldSetFlags()[7] ? this.roles : (java.lang.String) defaultValue(fields()[7]);
        record.bank = fieldSetFlags()[8] ? this.bank : (java.lang.String) defaultValue(fields()[8]);
        record.bankAccountNumber = fieldSetFlags()[9] ? this.bankAccountNumber : (java.lang.String) defaultValue(fields()[9]);
        record.bankAccountHolderName = fieldSetFlags()[10] ? this.bankAccountHolderName : (java.lang.String) defaultValue(fields()[10]);
        record.street = fieldSetFlags()[11] ? this.street : (java.lang.String) defaultValue(fields()[11]);
        record.city = fieldSetFlags()[12] ? this.city : (java.lang.String) defaultValue(fields()[12]);
        record.postalCode = fieldSetFlags()[13] ? this.postalCode : (java.lang.String) defaultValue(fields()[13]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<UserAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<UserAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<UserAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<UserAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










